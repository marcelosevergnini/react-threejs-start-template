{"version":3,"sources":["logo.svg","components/layout/navbar.tsx","components/layout/header.tsx","engine/engine.ts","components/engine/engine.tsx","components/layout/content.tsx","components/layout/footer.tsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","className","role","aria-label","href","alt","src","logo","id","rel","target","icon","faGithub","Header","RunEngine","useAntialias","color","scene","renderer","camera","controls","scroll","setControls","OrbitControls","domElement","enableDamping","dampingFactor","screenSpacePanning","minDistance","maxDistance","maxPolarAngle","Math","PI","addEventListener","updateControls","updateRenderSize","width","height","updateStyle","setSize","aspect","updateProjectionMatrix","addLights","lights","forEach","light","directionalLight","DirectionalLight","Color","position","set","x","y","z","normalize","add","addGrid","grid","GridHelper","size","dimensions","elementToAdd","render","disableControls","enabled","enableControls","this","Scene","background","WebGLRenderer","antialias","PerspectiveCamera","lookAt","style","Engine","props","containerRef","componentDidMount","appendChild","offsetWidth","offsetHeight","setState","window","resizeCanvas","onDocumentMouseMove","animate","requestAnimationFrame","update","event","preventDefault","mousePos","clientX","clientY","ref","React","createRef","state","backgroundColor","Component","Content","Footer","App","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ed9781f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport logo from \"../../logo.svg\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\n\n\nfunction NavBar() {\n    return (\n        <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n            <div className=\"navbar-brand\">\n                <a className=\"navbar-item\" href=\"arch-bricker\">\n                    <img alt={\"brand_logo\"} src={logo}/>\n                </a>\n            </div>\n            <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n                <div className=\"navbar-start\">\n                    <a href=\"/arch-bricker\" className=\"navbar-item\">\n                        Home\n                    </a>\n                </div>\n\n                <div className=\"navbar-end\">\n                    <div className=\"navbar-item\">\n                        <div className=\"buttons\">\n                            <a rel=\"noopener noreferrer\" className=\"button\" href={\"https://github.com/marcelosevergnini\"} target={\"_blank\"}>\n                                <span className=\"icon\">\n                                    <FontAwesomeIcon icon={faGithub} />\n                                  {/*<i className=\"fab fa-github\"/>*/}\n                                </span>\n                                <span>GitHub</span>\n                            </a>\n                            <button className=\"button is-light is-outlined\">\n                                <strong>SignUp</strong>\n                            </button>\n                            <button className=\"button is-light is-outlined\">\n                                <strong>Login</strong>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    );\n}\n\nexport default NavBar;","import React from \"react\";\nimport NavBar from \"./navbar\";\n\nfunction Header() {\n    return (\n        <section className=\"hero is-dark is-small\">\n            <NavBar />\n            <div className=\"hero-body\">\n                <div className=\"container\">\n                    {/*<h1 className=\"title\">*/}\n                    {/*    My Playground*/}\n                    {/*</h1>*/}\n                </div>\n            </div>\n\n        </section>\n    );\n}\n\nexport default Header;","import {Scene, WebGLRenderer, Color, DirectionalLight, PerspectiveCamera, GridHelper} from \"three\";\nimport OrbitControls from 'three-orbitcontrols';\n\nclass RunEngine {\n    scene: Scene;\n    renderer: WebGLRenderer;\n    camera: PerspectiveCamera;\n    controls: OrbitControls;\n    scroll: boolean = true;\n\n    constructor(useAntialias: boolean, color: number) {\n        this.scene = new Scene();\n        this.scene.background = new Color(color);\n        this.renderer = new WebGLRenderer({ antialias: useAntialias });\n        this.camera = new PerspectiveCamera( 45, 800 / 600, 1, 10000 );\n        this.renderer.setSize(0, 0, false);\n        this.camera.position.set( 2000, 1500, 1300 );\n        this.camera.lookAt( 0, 0, 0 );\n    };\n\n    setControls = () => {\n        this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n        this.controls.enableDamping = true;\n        this.controls.dampingFactor = 1;\n        this.controls.screenSpacePanning = false;\n        this.controls.minDistance = 100;\n        this.controls.maxDistance = 7000;\n        this.controls.maxPolarAngle = Math.PI / 2.3;\n        this.controls.addEventListener( 'change', this.updateControls);\n    };\n\n    updateRenderSize = (width: number, height: number, updateStyle: boolean ) => {\n        this.renderer.setSize(width, height, updateStyle);\n        this.camera.aspect = width / height;\n        this.camera.updateProjectionMatrix();\n    };\n\n    addLights = (lights: {color: number, position : { x: number, y: number, z: number}}[]) => {\n        lights.forEach((light: {color: number, position : { x: number, y: number, z: number}}) => {\n            let directionalLight = new DirectionalLight( new Color(light.color));\n            directionalLight.position.set(light.position.x, light.position.y , light.position.z).normalize();\n            this.scene.add(directionalLight);\n        });\n    };\n\n    addGrid = (grid: {size: number, dimensions: number }) => {\n        this.add(new GridHelper(grid.size, grid.dimensions,  0x7E7F80, 0xAFB2B5 ));\n    };\n\n    add = (elementToAdd: any) => {\n        this.scene.add(elementToAdd);\n    };\n\n    updateControls = () => {\n        this.renderer.render( this.scene,  this.camera);\n    };\n\n    disableControls = () => {\n        this.controls.enabled = false;\n        this.scroll = false;\n    };\n\n    enableControls = () => {\n        this.controls.enabled = true;\n        this.scroll = true;\n    };\n\n    render = () => {\n        this.renderer.render( this.scene, this.camera );\n    };\n}\nexport default RunEngine;\n","import React, { Component } from 'react';\nimport RunEngine from \"../../engine/engine\";\nimport  \"./engine.css\";\n\nconst style = {\n    height: \"calc(75vh)\"\n};\n\ninterface EngineProps {\n    backgroundColor: number,\n    lights: {color: number, position: {x: number, y: number, z: number}}[],\n    grid: {size: number, dimensions: number }\n}\n\nexport class Engine extends Component<EngineProps> {\n    containerRef: any;\n    props: EngineProps;\n    scene: RunEngine;\n\n    constructor(props: EngineProps) {\n        super(props);\n        this.props = props;\n        this.containerRef = React.createRef();\n        this.state = {width: 0, height: 0, mousePos: {x: 0,y: 0}};\n        this.scene = new RunEngine(true, this.props.backgroundColor);\n    }\n\n    componentDidMount = () => {\n        this.containerRef.appendChild(this.scene.renderer.domElement);\n        const {offsetWidth, offsetHeight} = this.containerRef;\n        this.setState({width: offsetWidth, height: offsetHeight});\n        this.scene.updateRenderSize(offsetWidth, offsetHeight, true);\n        this.scene.addLights(this.props.lights);\n        this.scene.addGrid(this.props.grid);\n        this.scene.setControls();\n        window.addEventListener(\"resize\", this.resizeCanvas, true);\n        window.addEventListener('mousemove', this.onDocumentMouseMove);\n        this.containerRef.addEventListener(\"mouseover\", this.scene.enableControls, true);\n        this.containerRef.addEventListener(\"mouseout\", this.scene.disableControls, true);\n        this.animate();\n    };\n\n    animate = () => {\n        window.requestAnimationFrame(this.animate);\n        this.scene.controls.update();\n        this.scene.render();\n    };\n\n    resizeCanvas = () => {\n        const {offsetWidth, offsetHeight} = this.containerRef;\n        this.scene.updateRenderSize(offsetWidth, offsetHeight, true);\n        this.setState({width: offsetWidth, height: offsetHeight});\n    };\n\n    onDocumentMouseMove = (event: MouseEvent) => {\n        event.preventDefault();\n        this.setState(() => {\n            return {mousePos: {\n                x: ((event.clientX / this.containerRef.offsetWidth) * 2 - 1),\n                y: (-(event.clientY / this.containerRef.offsetHeight) * 2 + 1)\n            }}\n        });\n    };\n\n    render = () => {\n        return (\n            <div className={(this.scene.scroll ? 'scrollEnable' : 'scrollDisable')} style={style} ref={ref => (this.containerRef = ref)} />\n        )\n    }\n}\n","import React from \"react\";\nimport {Engine} from \"../engine/engine\";\nimport  \"./content.css\";\n\nfunction Content() {\n    return (\n        <div className=\"container is-fluid content-spaces \">\n            <div className=\"box box-color\">\n                <Engine backgroundColor={0xF2F2F2} lights={[{color: 0xffffff, position: { x: 1, y: 0.75, z: 0.5 }}]} grid={{ size: 100000, dimensions: 500 }}/>\n            </div>\n        </div>\n    );\n}\n\nexport default Content;\n","import React from \"react\";\n\nfunction Footer() {\n    return (\n        <div className=\"footer is-dark is-small\">\n                <div className=\"content has-text-centered\">\n                    <p>\n                        <strong>Playground</strong> by <a href=\"https://github.com/marcelosevergnini\">Marcelo Severgnini</a>\n                        <strong> Have Fun</strong>\n                    </p>\n                </div>\n        </div>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport Header from \"./components/layout/header\";\nimport Content from \"./components/layout/content\";\nimport Footer from \"./components/layout/footer\";\n\nfunction App() {\n  return (\n      <div>\n        <Header />\n        <Content />\n        <Footer />\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}